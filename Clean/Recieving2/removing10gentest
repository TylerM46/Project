import numpy as np
from PIL import Image

readdata

def binary_to_image(binary_string, width, height, channels):
    # Convert binary string to byte array
    byte_array = bytearray()
    for i in range(0, len(binary_string), 3):
        byte = binary_string[i:i+3]
        byte_array.append(int(byte, 2) * 32)  # Scale back to original color range

    # Convert byte array to numpy array
    img_array = np.array(byte_array, dtype=np.uint8).reshape((height, width, channels))

    # Create and save image
    img = Image.fromarray(img_array, mode='RGB')
    
    img.save('./alive.jpg')
    print("made it")

def extractdata(binary_string, pattern):
    positions = []   # array of instance positions 
    start = 0

    # Find all start positions of the pattern
    while True:
        idx = binary_string.find(pattern, start)
        if idx == -1:
            break
        positions.append(idx)
        start = idx + 1  # allow overlapping

    # Extract sequences between each pair of occurrences
    results = []
    for i in range(len(positions) - 1):
        start_idx = positions[i] + len(pattern)
        end_idx = positions[i + 1]
        results.append(binary_string[start_idx:end_idx])

    return results

def remove_separators(bin_str):
    cleaned = []
    i = 0
    length = len(bin_str)
    while i < length:
        # Take 10 bits of data
        if i + 10 > length:
            # If less than 10 bits remain, just append remainder and stop
            cleaned.append(bin_str[i:])
            break
        data_bits = bin_str[i:i+10]
        cleaned.append(data_bits)
        i += 10

        # Check next two bits are separator '10'
        if i + 2 <= length:
            sep = bin_str[i:i+2]
            if sep != "10":
                raise ValueError(f"Separator '10' expected at position {i}, found '{sep}'")
            i += 2
        else:
            # No more separator, likely end of string
            break

    return ''.join(cleaned)

# --- Main usage ---

pattern = "110010101010101010101100"
segments = extractdata(readdata, pattern)

print(segments, len(segments[0]))

# Remove separators from the first extracted segment
cleaned_segment = remove_separators(segments[0])

print(f"Length before removing separators: {len(segments[0])}")
print(f"Length after removing separators: {len(cleaned_segment)}")

width = 25 # Replace with actual width
height = 25  # Replace with actual height
channels = 3  # RGB

binary_to_image(cleaned_segment, width, height, channels)

print(len(cleaned_segment))
